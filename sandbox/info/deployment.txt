apt update && apt install -y ca-certificates curl gnupg lsb-release

install -m 0755 -d /etc/apt/keyrings

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
    gpg --dearmor -o /etc/apt/keyrings/docker.gpg

chmod a+r /etc/apt/keyrings/docker.gpg

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
  https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | \
  tee /etc/apt/sources.list.d/docker.list > /dev/null

apt update && apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

ufw allow OpenSSH
ufw allow 8081
ufw enable

Смотрим id нужного контейнера 
docker ps
Для обращения к докер контейнеру и запуска скриптов в проекте
sudo docker exec -it api-admin-marketplace-app bash

Обрати внимание если какая то команда не работает убедись что ты в нужной директории сервера
ssh root@62.113.103.222


1. Покупаем сервер
2. Подключаемся к нему
3. Устанавливаем инструменты необходимые для работы приложения
4. Добавляем проект в нужную папку 


Работа с docker
1. Удалить остановленые контейнеры
docker container prune
2. Удалить остановленые image
docker image prune -a
3. Очистить ceshe сборки
docker builder prune
4. Удалить все неиспользуемые тома (volumes)
docker volume prune
5. Удаляем конкретный image
docker rmi <IMAGE_ID>

ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa_github_deploy
cat ~/.ssh/id_rsa_github_deploy.pub >> ~/.ssh/authorized_keys
cat ~/.ssh/id_rsa_github_deploy.pub | ssh user@server_ip 'mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys'

Посмотреть образы
docker images
Зайти в контейнер
docker exec -it 3f2da74f4991 bash  # через ID
docker exec -it my-nginx sh        # через имя (sh для Alpine-based образов)
