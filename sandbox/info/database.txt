Запуск контенера:
docker compose up -d --build

Удалить контейнер:
docker compose down

Подключается к уже запущенному серверу PostgreSQL внутри контейнера:
docker exec -it container_name psql -U POSTGRES_USER

Проверить, что контейнер запущен:
docker ps

Проверить логи PostgreSQL в контейнере:
docker logs container_name

Создать новую базу данных через psql:
docker exec -it container_name psql -U POSTGRES_USER -c "CREATE DATABASE testdb;"

Подключиться к конкретной БД:
docker exec -it container_name psql -U POSTGRES_USER -d testdb

Кратко: команды для управления:
Подключиться к PostgreSQL:	docker exec -it container_name psql -U POSTGRES_USER
Создать БД:	CREATE DATABASE dbname;
Показать БД:	\l
Переключится на другую БД: \c my_go_db
Удалить БД:	DROP DATABASE dbname;
Выйти из psql:	\q


Запусти Docker
docker run -d --name my_postgres \
  -e POSTGRES_PASSWORD=my_pass \
  -e POSTGRES_USER=postgres \
  -e POSTGRES_DB=postgres \
  -p 5432:5432 \
  postgres:17.4
Запусти сборку  




docker ps
docker exec -it <container_name_or_id> bash
psql -U postgres -d <database_name>
ПРоверка индексов
SELECT indexname, indexdef
FROM pg_indexes
WHERE tablename = 'users';
Удалить
DROP INDEX IF EXISTS <index_name>;
Проверить что удален
SELECT indexname
FROM pg_indexes
WHERE tablename = 'users';